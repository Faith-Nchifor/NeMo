name: nemo_kosmos
restore_from_path: null # used when starting from a .nemo file

trainer:
  devices: 1
  num_nodes: 1
  accelerator: gpu
  precision: bf16
  logger: False # logger provided by exp_manager
  enable_checkpointing: False
  use_distributed_sampler: False
  max_epochs: -1 # PTL default. In practice, max_steps will be reached first.
  max_steps: 375000 # consumed_samples = global_step * micro_batch_size * data_parallel_size * accumulate_grad_batches
  log_every_n_steps: 10
  val_check_interval: 100
  check_val_every_n_epoch: null
  limit_val_batches: 50
  limit_test_batches: 500
  accumulate_grad_batches: 1 # do not modify, grad acc is automatic for training megatron models
  gradient_clip_val: 1.0
  benchmark: False
  enable_model_summary: False # default PTL callback for this does not support model parallelism, instead we log manually

exp_manager:
  explicit_log_dir: null
  exp_dir: null
  name: nemo_kosmos
  create_wandb_logger: False
  wandb_logger_kwargs:
    project: null
    name: null
  resume_if_exists: True
  resume_ignore_no_checkpoint: True
  resume_from_checkpoint: ${model.resume_from_checkpoint}
  create_checkpoint_callback: True
  checkpoint_callback_params:
    monitor: val_loss
    save_top_k: 10
    mode: min
    always_save_nemo: False # saves nemo file during validation, not implemented for model parallel
    save_nemo_on_train_end: False # not recommended when training large models on clusters with short time limits
    filename: 'megatron_clip--{val_loss:.2f}-{step}-{consumed_samples}'
    model_parallel_size: ${multiply:${model.tensor_model_parallel_size}, ${model.pipeline_model_parallel_size}}
  ema:
    enable: False
    decay: 0.9999
    validate_original_weights: False
    every_n_steps: 1
    cpu_offload: False

model:
  precision: ${trainer.precision}

  # specify micro_batch_size, global_batch_size, and model parallelism
  # gradient accumulation will be done automatically based on data_parallel_size

  # Batch size guideline for different types of dataset
  micro_batch_size: 1 # limited by GPU memory
  global_batch_size: 256 # will use more micro batches to reach global batch size

  media_start_token: "<extra_id_998>"
  media_end_token: "<extra_id_999>"

  enabled_data_types: ["text", "image_caption"]
  per_type_micro_batch_size:
    text: 1
    image_caption: 32
    image_interleaved: 1
  per_type_sequence_length:
    text: 2048 # placeholder
    image_caption: 128
    image_interleaved: 2048
  per_type_loss_weights:
    text: 1
    image_caption: 1
    image_interleaved: 1

  tensor_model_parallel_size: 1 # intra-layer model parallelism
  pipeline_model_parallel_size: 1 # inter-layer model parallelism
  virtual_pipeline_model_parallel_size: null # interleaved pipeline

  restore_from_path: null # used in fine-tuning
  # multimodal configs
  num_media_latents: 64 # each media is encoded and sampled into `num_media_latents` LM embeddings

  llm:
    precision: ${trainer.precision}

    # model architecture
    encoder_seq_length: 2048
    max_position_embeddings: ${.encoder_seq_length}
    position_embedding_type: learned_absolute
    num_layers: 12
    hidden_size: 2048
    ffn_hidden_size: 5440 # Transformer FFN hidden size. Usually 4 * hidden_size.
    num_attention_heads: 16
    init_method_std: 0.014 # Standard deviation of the zero mean normal distribution used for weight initialization.')
    use_scaled_init_method: True # use scaled residuals initialization
    hidden_dropout: 0. # Dropout probability for hidden state transformer.
    attention_dropout: 0.
    kv_channels: null # Projection weights dimension in multi-head attention. Set to hidden_size // num_attention_heads if null
    apply_query_key_layer_scaling: True # scale Q * K^T by 1 / layer-number.
    normalization: layernorm1p # Type of normalization layers
    layernorm_epsilon: 1e-5
    do_layer_norm_weight_decay: False # True means weight decay on all params
    pre_process: True # add embedding
    post_process: True # add pooler
    persist_layer_norm: True # Use of persistent fused layer norm kernel.
    bias: True # Whether to use bias terms in all weight matrices.
    activation: 'fast-swiglu' # Options ['gelu', 'geglu', 'swiglu', 'reglu', 'squared-relu', 'fast-geglu', 'fast-swiglu', 'fast-reglu']
    headscale: False # Whether to learn extra parameters that scale the output of the each self-attention head.
    transformer_block_type: 'pre_ln' # Options ['pre_ln', 'post_ln', 'normformer']
    normalize_attention_scores: True # Whether to scale the output Q * K^T by 1 / sqrt(hidden_size_per_head). This arg is provided as a configuration option mostly for compatibility with models that have been weight-converted from HF. You almost always want to se this to True.
    rotary_percentage: 0.5 # If using position_embedding_type=rope, then the per head dim is multiplied by this.
    attention_type: 'multihead' # Attention type. Options ['multihead']
    share_embeddings_and_output_weights: False # Share embedding and output layer weights.
    overlap_p2p_comm: False # Overlap p2p communication with computes. This argument is valid only when `virtual_pipeline_model_parallel_size` is larger than 1
    batch_p2p_comm: True # Batch consecutive inter-peer send/recv operations. This argument is valid only when `virtual_pipeline_model_parallel_size` is larger than 1

    ## Activation Checkpointing
    activations_checkpoint_granularity: null # 'selective' or 'full'
    activations_checkpoint_method: null # 'uniform', 'block', not used with 'selective'
    activations_checkpoint_num_layers: null # not used with 'selective'
    num_micro_batches_with_partial_activation_checkpoints: null
    activations_checkpoint_layers_per_pipeline: null
    sequence_parallel: False

    # precision
    native_amp_init_scale: 4294967296 # 2 ** 32
    native_amp_growth_interval: 1000
    hysteresis: 2 # Gradient scale hysteresis
    fp32_residual_connection: False # Move residual connections to fp32
    fp16_lm_cross_entropy: False # Move the cross entropy unreduced loss calculation for lm head to fp16

    # model fusions
    masked_softmax_fusion: True # Use a kernel that fuses the attention softmax with it's mask.
    bias_dropout_add_fusion: True # Use a kernel that fuses the bias addition, dropout and residual connection addition.

    use_cpu_initialization: False # Init weights on the CPU (slow for large models)
    onnx_safe: False # Use work-arounds for known problems with Torch ONNX exporter.
    gradient_accumulation_fusion: False # Fuse weight gradient accumulation to GEMMs. Only used with pipeline parallelism.
    openai_gelu: False
    bias_activation_fusion: False
    megatron_legacy: False

    transformer_engine: False
    fp8: False # enables fp8 in TransformerLayer forward
    fp8_e4m3: False # sets fp8_format = recipe.Format.E4M3
    fp8_hybrid: False # sets fp8_format = recipe.Format.HYBRID
    fp8_margin: 0 # scaling margin
    fp8_interval: 1 # scaling update interval
    fp8_amax_history_len: 1 # Number of steps for which amax history is recorded per tensor
    fp8_amax_compute_algo: most_recent # 'most_recent' or 'max'. Algorithm for computing amax from history
    use_emha: False # Use fused multi-head attention for large sequence-length. Note this is not yet supported. Please set to False.

  vision:
    from_pretrained: /path/to/clip_model.nemo
    precision: ${trainer.precision}
    # vision configs
    patch_dim: 14
    img_h: 224
    img_w: 224
    image_mean: null
    image_std: null
    num_channels: 3
    drop_patch_rate: 0.0
    drop_path_rate: 0.0
    global_average_pool: False
    class_token_length: 1
    preprocess_layernorm: True # apply layer norm to embedded tokens

    # model architecture
    encoder_seq_length: 196
    max_position_embeddings: ${.encoder_seq_length}
    position_embedding_type: learned_parameters
    num_layers: 24
    hidden_size: 1024
    ffn_hidden_size: 4096 # Transformer FFN hidden size. Usually 4 * hidden_size.
    num_attention_heads: 16
    init_method_std: 0.02 # Standard deviation of the zero mean normal distribution used for weight initialization.')
    use_scaled_init_method: True # use scaled residuals initialization
    hidden_dropout: 0. # Dropout probability for hidden state transformer.
    attention_dropout: 0.
    kv_channels: null # Projection weights dimension in multi-head attention. Set to hidden_size // num_attention_heads if null
    apply_query_key_layer_scaling: True # scale Q * K^T by 1 / layer-number.
    normalization: layernorm # Type of normalization layers
    layernorm_epsilon: 1e-5
    do_layer_norm_weight_decay: False # True means weight decay on all params
    pre_process: True # add embedding
    post_process: True # add final layer norm
    persist_layer_norm: True # Use of persistent fused layer norm kernel.

    ## Activation Checkpointing
    activations_checkpoint_granularity: null # 'selective' or 'full'
    activations_checkpoint_method: null # 'uniform', 'block', not used with 'selective'
    activations_checkpoint_num_layers: null # not used with 'selective'
    sequence_parallel: False

    # precision
    native_amp_init_scale: 4294967296 # 2 ** 32
    native_amp_growth_interval: 1000
    hysteresis: 2 # Gradient scale hysteresis
    fp32_residual_connection: False # Move residual connections to fp32
    fp16_lm_cross_entropy: False # Move the cross entropy unreduced loss calculation for lm head to fp16

    # model fusions
    masked_softmax_fusion: True # Use a kernel that fuses the attention softmax with it's mask.
    bias_dropout_add_fusion: True # Use a kernel that fuses the bias addition, dropout and residual connection addition.

    use_cpu_initialization: False # Init weights on the CPU (slow for large models)
    onnx_safe: False # Use work-arounds for known problems with Torch ONNX exporter.
    gradient_accumulation_fusion: False # Fuse weight gradient accumulation to GEMMs. Only used with pipeline parallelism.
    openai_gelu: False
    bias_activation_fusion: False
    megatron_legacy: False

  # Megatron O2-style half-precision
  megatron_amp_O2: True # Enable O2-level automatic mixed precision using main parameters
  grad_allreduce_chunk_size_mb: 125
  grad_div_ar_fusion: True # Fuse grad division into torch.distributed.all_reduce

  # miscellaneous
  seed: 1234
  resume_from_checkpoint: null # manually set the checkpoint file to load from
  apex_transformer_log_level: 30 # Python logging level displays logs with severity greater than or equal to this
  gradient_as_bucket_view: True # PyTorch DDP argument. Allocate gradients in a contiguous bucket to save memory (less fragmentation and buffer memory)

  tokenizer:
    library: 'megatron'
    type: 'GPT2BPETokenizer'
    model: null
    vocab_file: null
    merge_file: null
    delimiter: null # only used for tabular tokenizer
    sentencepiece_legacy: False # Legacy=True allows you to add special tokens to sentencepiece tokenizers.

  data:
    # TEXT DATA
    # ==================================================================================
    # Path to data must be specified by the user.
    # Supports List, String and Dictionary
    # List : can override from the CLI: "model.data.data_prefix=[.5,/raid/data/pile/my-gpt3_00_text_document,.5,/raid/data/pile/my-gpt3_01_text_document]",
    # Or see example below:
    # data_prefix:
    #   - .5
    #   - /raid/data/pile/my-gpt3_00_text_document
    #   - .5
    #   - /raid/data/pile/my-gpt3_01_text_document
    # Dictionary: can override from CLI "model.data.data_prefix"={"train":[1.0, /path/to/data], "validation":/path/to/data, "test":/path/to/test}
    # Or see example below:
    # "model.data.data_prefix: {train:[1.0,/path/to/data], validation:[/path/to/data], test:[/path/to/test]}"
    num_workers: 2
    data_prefix: ???
    index_mapping_dir: null # path to save index mapping .npy files, by default will save in the same location as data_prefix
    data_impl: mmap
    splits_string: 950,50,0
    seq_length: ${model.llm.encoder_seq_length}
    skip_warmup: True
    dataloader_type: single # cyclic
    reset_position_ids: False # Reset position ids after end-of-document token
    reset_attention_mask: False # Reset attention mask after end-of-document token
    eod_mask_loss: False # Mask loss for the end of document tokens
    validation_drop_last: True # Set to false if the last partial validation samples is to be consumed
    no_seqlen_plus_one_input_tokens: False # Set to True to disable fetching (sequence length + 1) input tokens, instead get (sequence length) input tokens and mask the last token
    pad_samples_to_global_batch_size: False # Set to True if you want to pad the last partial batch with -1's to equal global batch size
    shuffle_documents: True # Set to False to disable documents shuffling. Sample index will still be shuffled

    # =================================================================================
    # MEDIA DATA
    image_caption:
      num_workers: 8
      train:
        dataset_path: # List of paths to pkl files or tar files
          - /datasets/coyo/test.pkl
      validation: # List of paths to pkl files or tar files
        dataset_path:
          - /datasets/coyo/test.pkl
      webdataset:
        infinite_sampler: False
        local_root_path: /datasets/coyo

    image_interleaved:
      num_workers: 8
      train:
        dataset_path: # List of paths to pkl files or tar files
          - /datasets/coyo/test.pkl
      validation: # List of paths to pkl files or tar files
        dataset_path:
          - /datasets/coyo/test.pkl
      webdataset:
        chunk_size: 190
        infinite_sampler: False
        local_root_path: /datasets/coyo
#      boto3:
#        credentials_file: /lustre/fsw/joc/yuya/kosmos/s3_cred
#        bucket: webdataset

  # Nsys profiling options
  nsys_profile:
    enabled: False
    start_step: 10  # Global batch to start profiling
    end_step: 10 # Global batch to end profiling
    ranks: [ 0 ] # Global rank IDs to profile
    gen_shape: False # Generate model and kernel details including input shapes

  optim:
    name: fused_adam
    lr: 2e-4
    weight_decay: 0.1
    betas:
      - 0.9
      - 0.95
    sched:
      name: CosineAnnealing
      warmup_steps: 2000
      constant_steps: 0
      min_lr: 2e-5